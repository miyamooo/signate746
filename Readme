## kaggleと業務のつながり

機械学習モデルを業務に取り入れるには大きく４つのフェーズを通る

- 企画：そもそも何を解決するのか、課題は何か
- PoC：実現性の検証、モデルの精度検証　　　　　　　　　　　←kaggleではここをやってる
- 開発：機械学習を組み込んだ業務システムの開発
- 運用

PoCを細かく分けると・・

- 業務課題の理解
- データの用意
- 分析設計
- 前処理　　　　　　　kaggleでは赤字部分をやる
- 特徴量生成
- モデリング
- 結果報告

つまり、データ分析コンペでは業務全体のうち、特に技術力が必要な部分を勉強できる。

社内調整などの力は業務をこなしながら身に着けるしかない。

## おすすめ書籍

多分一番有名な本

[Kaggleで勝つデータ分析の技術](https://www.amazon.co.jp/Kaggle%E3%81%A7%E5%8B%9D%E3%81%A4%E3%83%87%E3%83%BC%E3%82%BF%E5%88%86%E6%9E%90%E3%81%AE%E6%8A%80%E8%A1%93-%E9%96%80%E8%84%87-%E5%A4%A7%E8%BC%94/dp/4297108437/ref=sr_1_1_sspa?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&crid=179H4ZG7KBT8L&keywords=kaggle&qid=1673599341&sprefix=kaggle%2Caps%2C179&sr=8-1-spons&psc=1&spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUFYTjNGTTQ5NTFNWUImZW5jcnlwdGVkSWQ9QTA4MDIxNDMxUEVROEs0OEY1VlBYJmVuY3J5cHRlZEFkSWQ9QTJQNVRFOFYyMDVZRzcmd2lkZ2V0TmFtZT1zcF9hdGYmYWN0aW9uPWNsaWNrUmVkaXJlY3QmZG9Ob3RMb2dDbGljaz10cnVl)

こっちは新しめ。手法も最近のものになってる。

[Kaggleで磨く 機械学習の実践力--実務xコンペが鍛えたプロの手順](https://www.amazon.co.jp/Kaggle%E3%81%A7%E7%A3%A8%E3%81%8F-%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92%E3%81%AE%E5%AE%9F%E8%B7%B5%E5%8A%9B-%E5%AE%9F%E5%8B%99x%E3%82%B3%E3%83%B3%E3%83%9A%E3%81%8C%E9%8D%9B%E3%81%88%E3%81%9F%E3%83%97%E3%83%AD%E3%81%AE%E6%89%8B%E9%A0%86-%E8%AB%B8%E6%A9%8B-%E6%94%BF%E5%B9%B8/dp/4865943269/ref=sr_1_2_sspa?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&crid=179H4ZG7KBT8L&keywords=kaggle&qid=1673599341&sprefix=kaggle%2Caps%2C179&sr=8-2-spons&psc=1&spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUFYTjNGTTQ5NTFNWUImZW5jcnlwdGVkSWQ9QTA4MDIxNDMxUEVROEs0OEY1VlBYJmVuY3J5cHRlZEFkSWQ9QTJSVlJXSk0zSTJFTUQmd2lkZ2V0TmFtZT1zcF9hdGYmYWN0aW9uPWNsaWNrUmVkaXJlY3QmZG9Ob3RMb2dDbGljaz10cnVl)

内容はちょっと薄めだけど読みやすかった

[実践Ｄａｔａ Ｓｃｉｅｎｃｅシリーズ ＰｙｔｈｏｎではじめるＫａｇｇｌｅスタートブック (ＫＳ情報科学専門書)](https://www.amazon.co.jp/%E5%AE%9F%E8%B7%B5%EF%BC%A4%EF%BD%81%EF%BD%94%EF%BD%81-%EF%BC%B3%EF%BD%83%EF%BD%89%EF%BD%85%EF%BD%8E%EF%BD%83%EF%BD%85%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%EF%BC%B0%EF%BD%99%EF%BD%94%EF%BD%88%EF%BD%8F%EF%BD%8E%E3%81%A7%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B%EF%BC%AB%EF%BD%81%EF%BD%87%EF%BD%87%EF%BD%8C%EF%BD%85%E3%82%B9%E3%82%BF%E3%83%BC%E3%83%88%E3%83%96%E3%83%83%E3%82%AF-%EF%BC%AB%EF%BC%B3%E6%83%85%E5%A0%B1%E7%A7%91%E5%AD%A6%E5%B0%82%E9%96%80%E6%9B%B8-%E7%9F%B3%E5%8E%9F%E7%A5%A5%E5%A4%AA%E9%83%8E-ebook/dp/B088R992TJ/ref=sr_1_6?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&crid=179H4ZG7KBT8L&keywords=kaggle&qid=1673599341&sprefix=kaggle%2Caps%2C179&sr=8-6)

## データ分析コンペ

- kaggle　[https://www.kaggle.com/](https://www.kaggle.com/)
    - いわずと知れたコンペ。世界中から人が集まってるので最先端な解法も知れる（かも）
    - 英語
    - 米国の知識が必要なケースも

- signate　[https://signate.jp/](https://signate.jp/)
    - 国内では大手
    - コンペもやや多め
    - 難易度はピンキリ
    - forum投稿は少な目

- probspace  [https://comp.probspace.com/](https://comp.probspace.com/)
    - 面白いコンペが多い
    - 成績優秀者はコード提出必須　→　デキる人の解法が学べる
    - コンペ開催が少ないのがたまにキズ

- Nishika    [https://www.nishika.com/](https://www.nishika.com/)
    - 実務寄りなコンペが多そう？（未着手）

勉強におススメは**probspace** 

自力で提出までやる　→　うまい人の解法を見る　が効率的。

## Titanicの次におススメ

まずはTitanicで雰囲気を掴むのがいい。

大体のコンペではおおまかに

- データ読み込み
- 前処理（欠損値の補正など）
- 特徴量生成
- モデル作成
- 提出用ファイル生成

さえできれば提出まで漕ぎつけられる。

なんのゲーム？とかルールとか何にも情報がないけどとっつきやすいコンペ。

[](https://signate.jp/competitions/746/leaderboard)

## やってみてのつまずきポイントとか感想

- Titanicをやってみて分かった気になる
    
    違うコンペに手を出してみたらデータフレームの加工だけで四苦八苦。
    
    あんなに簡単に特徴量が見つからない
    
- 提出回数には制限がある(3回/dayとか）
    
    手元データだけでモデル精度を確認できる環境づくり（ベースライン作成）がとても大事。
    
    “クロスバリデーション”がキーワード
    

- LightGBMがやっぱり楽で強い。　ほんとの上位の人は、まずざっくりLightGBMで特徴量抽出をやってみて、ニューラルネットワークでさらにモデルを進化させてるみたい。

　　実業務で説明重視ならロジスティック回帰モデルも選択肢に入る。

  LightGBMはほとんど前処理がいらない（標準化とか正規化とかダミー変数化とかしなくても結果が出せる）のもとっつきやすい要因の一つ。

- 得点を上げる方法
    
    ①　特徴量を作る（四則演算、平均、分散、タイムシフトなど）
    
    　やみくもに作ってお宝探しをする方法と仮説に基づいて作る方法がある。
    
    　前者は特徴量の有効性を確認する回数が多いので、ベースライン作成が特に大事になってくる（毎回提出して確認できない）
    
    　平均とか分散を特徴量として追加するときには、”リーク”に注意。[https://www.codexa.net/target_encoding/](https://www.codexa.net/target_encoding/)
    
    ②　モデルの最適パラメータを探す　　ちゃんとやるとものすごい時間かる（Google Colabだと打ち切られるかも）
    
    ③　いろんなモデルを組み立ててアンサンブルする(LightGBM + NN　とか　別の人とチーム組んでとか）　同程度の精度を持ったモデルが複数必要で意外と大変
    

　  感触としては①がひたすら重要。

もうやれることがなくなってきたけどもう少し上位に入りたい！ってときにやっと②③に手を出すような感じ。まだこれらで改善に至れたことは無い。

- 特徴量にせよモデルのパラメータにせよ絶対こうすれば正解！ってものは無さそう。すっごい時間かけたモデルで精度が落ちる。やる気がなくなるのループ。

(参考)1/10時点で3位になれたコード　

- 特徴量生成（ちょっとしかやってない）
- モデル最適化（まったくやってない）
- アンサンブル（まったくやってない）

伸びしろしかないのでぜひ改良してください

[https://github.com/miyamooo/signate746](https://github.com/miyamooo/signate746)

（偶然だよね・・？）

[https://www.nishika.com/competitions/bussei/topics/428](https://www.nishika.com/competitions/bussei/topics/428)
